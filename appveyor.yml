environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\continuous_integration\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"

# Test only two environments to speed up CI time
#      PYTHON_VERSION: "3.4"
#      PYTHON_ARCH: "32"

#      PYTHON_VERSION: "2.7"
#      PYTHON_ARCH: "64"

#    - PYTHON_VERSION: "3.4"
#      PYTHON_ARCH: "64"

install:
    #SET PATH=C:\mingw64\bin;%PATH%
    #Use the pre-installed Miniconda for the desired arch
  - ps: if($env:PYTHON_ARCH -eq '32') {
      $env:path="C:\msys64\mingw\bin;C:\Miniconda;C:\Miniconda\Scripts;C:Miniconda\Library\bin;$($env:path)"
      }
      else {
          $env:path="C:\msys64\mingw64\bin;C:\Miniconda-x64;C:\Miniconda-x64\Scripts;C:Miniconda-x64\Library\bin;$($env:path)"
      }
  #
  #- ps: if($env:tbs_arch -eq 'x64') {
  #        $env:vcvar_arg = 'x86_amd64';
  #      }
  #      elseif($env:tbs_arch -eq 'x86') {
  #        $env:vcvar_arg = 'x86';
  #      }
  #- ps: if($env:tbs_tools -eq 'mingw' -and $env:tbs_arch -eq 'x64')
  # {
  #      curl -outfile mw64.7z "http://libgd.blob.core.windows.net/mingw/x86_64-4.9.1-release-posix-seh-rt_v3-rev1.7z";
  #       if((Get-FileHash mw64.7z -Algorithm SHA1).Hash -ne "91A35AE296C1A71802AB0C7228EE57F9AAC5D7C7")
  #       {
  #           echo "Invalid file hash";
  #           exit 1;
  #       };
  #        7z x -oC:\ mw64.7z | out-null;
  #      }

  - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S gcc git make"

  # DEBUGGING
  #- "SET PATH"
  #- "python --version"
  #- "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  #- "conda info"
  #- "conda list"

  # Create and activate a conda environment with the desired Python version
  - "conda update --yes --quiet conda"
  - "conda create --yes --quiet -n matrix_env python=%PYTHON_VERSION%"
  - "activate matrix_env"

  # Install PyTMatrix dependecies
  - "conda install -y -q numpy scipy matplotlib netcdf4 nose "
  - "if \"%PYTHON_VERSION%\"==\"2.7\" (conda install -y -q basemap)"

  # Check that we have the expected version and architecture for Python
  # in the conda environment
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "conda list"

  # build Py-ART
  - "%CMD_IN_ENV% python setup.py build_ext -i"

build: false

test_script:
  # run the unit tests
  #- "python -c \"import nose; nose.main()\" -v"
